@{
    ViewBag.Title = "Employee List";
}

<div class="row-fluid">
    <div id="divView"  class="col-md-12 " style="display:none">
        <div style="text-align:center">
            <span id="headerTitle" style="font-size:large;font:bold; text-align:center">Details of  </span>
        </div>
        <div class="row col-md-12">
            <div class="col-md-2"></div>
            <div class="col-md-7">
                <div class="col-md-12" style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif">
                    EmpIdCardNo : <span id="EmpIdCardNoDD" style="font-size:large;font:bold"></span><br />
                    Name : <span id="EmpNameDD" style="font-size:large;font:bold">   </span><br />
                    Mobile : <span id="EmpMobileDD" style="font-size:large;font:bold">   </span><br />
                    Email : <span id="EmpEmailDD" style="font-size:large;font:bold">   </span><br />
                    Join Date : <span id="JoinDateDD" style="font-size:large;font:bold">   </span><br />
                    Department : <span id="DepartmentNameDD" style="font-size:large;font:bold">   </span><br />
                    Job Description : <span id="EmpJobDescriptionDD" style="font-size:large;font:bold">   </span><br />
                    Is Active : <span id="IsActiveDD" style="font-size:large;font:bold">   </span><br />
                </div>
            </div>
        </div>
    </div>

    <div id="departmentwindow" class="col-md-12 " style="display:none">
        <div class="col-md-12 ">
            <span id="departmentNotification"></span>
            <form id="departmentform">
                <div hidden><input type="text" name="empId" id="empId" /></div>
               <div class="col-md-12 row">
                   <div class="col-md-6">
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Id Card</label>
                           </div>
                           <div class="col-md-8">
                               <input name="EmpIdCardNo" id="EmpIdCardNo" class="form-control" style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Name</label>
                           </div>
                           <div class="col-md-8">
                               <input name="EmpName" id="EmpName" class="form-control" style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Mobile</label>
                           </div>
                           <div class="col-md-8">
                               <input name="EmpMobile" id="EmpMobile" class="form-control" style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Email</label>
                           </div>
                           <div class="col-md-8">
                               <input name="EmpEmail" id="EmpEmail" class="form-control" style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                   </div>
                   <div class="col-md-6">
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Join Date</label>
                           </div>
                           <div class="col-md-8">
                               <input name="JoinDate" id="JoinDate"  style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Department</label>
                           </div>
                           <div class="col-md-8">
                               <input name="DepartmentName" id="DepartmentName" class="form-control" style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>Job Des.</label>
                           </div>
                           <div class="col-md-8">
                               <input name="EmpJobDescription" id="EmpJobDescription" class="form-control" style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                       <div class="col-md-12 row">
                           <div class="col-md-4">
                               <label>IsActive</label>
                           </div>
                           <div class="col-md-8">
                               <input name="IsActive" id="IsActive"  style="width:100%; margin-bottom:.4vh" />
                           </div>
                       </div>
                   </div>

               </div>


            </form>
            <div data-container-for="notification" class="k-edit-field">
                <div id="dept-success-msg" class="k-content successmsg"></div>
            </div>
            <div class="k-edit-buttons k-state-default">
                <button type="button" class="k-button k-button-icontext k-primary k-grid-update" id="DepartmentSave">
                    <span class="k-icon k-update"></span>Create
                </button>
                <a class="k-button k-button-icontext k-grid-cancel dept-close-button">
                    <span class="k-icon k-cancel"></span>Cancel
                </a>
            </div>
        </div>
    </div>
    <div id="dept-update-msg" class="k-content successmsg"></div>
    <div id="toolbar"></div>
    <div id="grid" style="height:390px"></div>
</div>
<script id="template2" type="text/x-kendo-template">
    <a style="font-size:9px;padding-top:.5vh;padding-bottom:.5vh; text-decoration: none;" onclick="EditEmployee(#= EmpId #)" class="btn btn-small btn-info">Edit</a>
    <a style="font-size:9px;padding-top:.5vh;padding-bottom:.5vh; text-decoration: none;" onclick="ViewEmployee(#= EmpId #)" class="btn btn-small btn-info">View</a>
    <a style="font-size:9px;padding-top:.5vh;padding-bottom:.5vh; text-decoration: none;" onclick="DeleteEmployee(#= EmpId #)" class="btn btn-small btn-info">Delete</a>
</script>

<script type="text/javascript">
    jQuery.ajaxSetup({ cache: false });
    var getUrl = window.location;
    var baseUrl = getUrl.protocol + "//" + getUrl.host + "/";
    var token = localStorage.getItem('accessToken');
    var userId = localStorage.getItem('userId');
    var IsCreatePermission = localStorage.getItem('IsCreatePermission');
    var IsEditPermission = localStorage.getItem('IsEditPermission');
    var IsViewPermission = localStorage.getItem('IsViewPermission');
    var IsDeletePermission = localStorage.getItem('IsDeletePermission');

    $("#idPageTitle").text('Employee List');
    function EditEmployee(empId){
        if(IsEditPermission!= 'true'){
            swal("Warning","You don't have edit permission","warning");
            return;
        }
        $.ajax({
            url: baseUrl + "api/Employees/getEmployeeInfo",
            type: 'GET',
            dataType: 'json',
            data: {
                EmpId: empId,
            },
            beforeSend: function (xhr) {
                var auth = 'Bearer ' + token;
                xhr.setRequestHeader('Authorization', auth);
            },
            success: function (data) {
                $("#departmentform")[0].reset();
                $("#empId").val(data.EmpId);
                $("#EmpIdCardNo").val(data.EmpIdCardNo);
                $("#EmpName").val(data.EmpName);
                $("#EmpMobile").val(data.EmpMobile);
                $("#EmpEmail").val(data.EmpEmail);
                $("#JoinDate").text(data.JoinDate);
                $("#DepartmentName").val(data.DepartmentName);
                $("#EmpJobDescription").val(data.EmpJobDescription);
                $("#IsActive").data("kendoComboBox").value(data.IsActive);
                $("#departmentwindow").data("kendoWindow").center().open();
                return false;
            },
            error: function (xhr, errorType, exception) {
                var responseText = jQuery.parseJSON(xhr.responseText);
                departmentNotification.show(responseText.Message, "warning");
            }
        });
    }
    function DeleteEmployee(empId){
        if(IsDeletePermission!= 'true'){
            swal("Warning","You don't have delete permission","warning");
            return;
        }
        swal({
            title: 'Delete !',
            text: "Are you sure want to delete!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, logout!'
        }).then((result) => {
            if (result.value == true) {
                $.ajax({
                    url: baseUrl + "api/Employees/deleteEmployee",
                    type: 'GET',
                    dataType: 'json',
                    data: {
                        EmpId: empId,
                    },
                    beforeSend: function (xhr) {
                        var auth = 'Bearer ' + token;
                        xhr.setRequestHeader('Authorization', auth);
                    },
                    success: function (data) {
                        $("#grid").data("kendoGrid").dataSource.read();
                        swal("Success","Deleted","success");
                        return;
                    }
                   
                });

            }
        });


        
    }
    function ViewEmployee(empId){
        if(IsViewPermission!= 'true'){
            swal("Warning","You don't have view permission","warning");
            return;
        }
        $.ajax({
            url: baseUrl + "api/Employees/getEmployeeInfo",
            type: 'GET',
            dataType: 'json',
            data: {
                EmpId: empId,
            },
            beforeSend: function (xhr) {
                var auth = 'Bearer ' + token;
                xhr.setRequestHeader('Authorization', auth);
            },
            success: function (data) {
                $("#headerTitle").text("Details of  "+data.EmpName  );
                $("#EmpIdCardNoDD").text(data.EmpIdCardNo);
                $("#EmpNameDD").text(data.EmpName);
                $("#EmpMobileDD").text(data.EmpMobile);
                $("#EmpEmailDD").text(data.EmpEmail);
                $("#JoinDateDD").text(data.JoinDate);
                $("#DepartmentNameDD").text(data.DepartmentName);
                $("#EmpJobDescriptionDD").text(data.EmpJobDescription);
                $("#IsActiveDD").text(data.IsActive);
                $("#divView").data("kendoWindow").center().open();
                return false;
            },
            error: function (xhr, errorType, exception) {
                var responseText = jQuery.parseJSON(xhr.responseText);
                departmentNotification.show(responseText.Message, "warning");
            }
        });

       
        
    }


    $("#JoinDate").kendoDatePicker({
        value: new Date(),
        format: "dd-MMM-yyyy",
        min: new Date(),
        dateInput: true
    });
    var StaticdataSource = [
            { text: "True", value: "True" },
            { text: "False", value: "False" }
            ];
    $("#IsActive").kendoComboBox({
        dataTextField: "text",
        dataValueField: "value",
        dataSource: StaticdataSource,
        filter: "contains",
        suggest: true,
        index: 3
    });

    var departmentNotification = $("#departmentNotification").kendoNotification({
        appendTo: "#dept-success-msg",
        autoHideAfter: 6000,
        button: true,
        hideOnClick: true,
    }).data("kendoNotification");
    $('#DepartmentSave').unbind().bind('click', function (e) {
        e.preventDefault();
        var EmpId = $("#empId").val() == null ? 0 : $("#empId").val() == "" ? 0 : $("#empId").val();
            $.ajax({
                url: baseUrl + "api/Employees/SaveEmployee",
                type: 'POST',
                dataType: 'json',
                data: {
                    EmpId: EmpId,
                    EmpIdCardNo        :$("#EmpIdCardNo").val(),
                    EmpName            :$("#EmpName").val(),
                    EmpMobile          :$("#EmpMobile").val(),
                    EmpEmail           :$("#EmpEmail").val(),
                    JoinDate           :$("#JoinDate").val(),
                    DepartmentName     :$("#DepartmentName").val(),
                    EmpJobDescription  :$("#EmpJobDescription").val(),
                    IsActive           :$("#IsActive").val(),
                },
                beforeSend: function (xhr) {
                    var auth = 'Bearer ' + token;
                    xhr.setRequestHeader('Authorization', auth);
                },
                success: function (data) {
                    console.log(data);
                    $("#departmentwindow").data("kendoWindow").center().close();
                    $("#departmentform")[0].reset();
                    $("#grid").data("kendoGrid").dataSource.read();
                    swal("Success", data.message, "success");
                    return false;
                },
                error: function (xhr, errorType, exception) {
                    var responseText = jQuery.parseJSON(xhr.responseText);
                    departmentNotification.show(responseText.Message, "warning");
                }
            });

    });
    $("#toolbar").kendoToolBar({
        items: [
            { type: "button", text: "Add Employee", id: "dept", icon: "k-icon k-add" },
            { type: "button", text: "Export To Excel", id: "exportExcel", icon: "k-icon k-i-excel" },
        ]
    });
    if(IsCreatePermission!='true'){
        $("#dept").hide();
    }else{
        $("#dept").show();
    }

    $("#exportExcel").click(function () {
        var grid = $("#grid").data("kendoGrid").saveAsExcel();
    });
    $("#undo").click(function () {
        $("#window-insert").data("kendoWindow").center().open();
        $("#undo").fadeOut();
    });
    function onEmpClose() {
        $("#undo").fadeIn();
    }
    $(".close-button").click(function () {
        $(this).closest("[data-role=window]").data("kendoWindow").close();
    });
    $(".dept-close-button").click(function () {
        $(this).closest("[data-role=window]").data("kendoWindow").close();
    });
    $("#dept").click(function () {
        $("#departmentform")[0].reset();
        $("#departmentwindow").data("kendoWindow").center().open();
        $("#dept").fadeOut();
    });
    function onDeptClose() {
        $("#dept").fadeIn();
    }

    $("#departmentwindow").kendoWindow({
        width: "70%",
        title: "Employee Create",
        resizable: false,
        scrollable: false,
        actions: [
            "Close"
        ],
        position: {
        },
        close: onDeptClose
    }).data("kendoWindow");
    $("#divView").kendoWindow({
        width: "60%",
        title: "Details View",
        resizable: false,
        scrollable: false,
        actions: [
            "Close"
        ],
        position: {
        },
        close: onDeptClose
    }).data("kendoWindow");
    dataSource = new kendo.data.DataSource({
        transport: {
            read:
            {
                url: baseUrl + "api/Employees/getAllEmployee",
                dataType: "json",   //reading data
                beforeSend: function (xhr) {
                    var auth = 'Bearer ' + token;
                    xhr.setRequestHeader('Authorization', auth);
                }
            }
        },
        schema:
        {
            model:
            {
            }
        },
        pageSize: 10
    });
    $("#grid").kendoGrid({
        dataSource: dataSource,
        selectable: true,
        groupable: true,
        sortable: true,
        excel: {
            allPages: true,
            fileName: "UserList.xlsx"
        },
        columns: [
            { field: "EmpId", title: "Name", width: "150px", hidden: true },
            { field: "EmpIdCardNo", title: "Id Card", width: "80px" },
            { field: "EmpName", title: "Name", width: "100px" },
            { field: "EmpMobile", title: "Mobile", width: "80px" },
            { field: "EmpEmail", title: "Email", width: "100px" },
            { field: "JoinDate", title: "Joining",
                template: "#= kendo.toString(kendo.parseDate(JoinDate, 'yyyy-MM-dd'), 'dd-MMM-yyyy') #",
                width: "70px" },
            { field: "DepartmentName", title: "Department", width: "100px" },
            { field: "EmpJobDescription", title: "Description", width: "150px" },
            { field: "IsActive", title: "Active", width: "50px" },
            { title: "Process", width: "150px", template: kendo.template($("#template2").html()) },
            //{
            //    command: { text: "Edit", className: "editButton", imageClass: "k-icon k-i-pencil ob-icon-only" }, title: "Action", width: "110px"
            //}

        ],
        allowCopy: false,
        filterable: true,
        columnMenu: true,
        reorderable: true,
        resizable: true,
        pageable: {
            refresh: true,
            pageSize: true,
            pageSizes: [5, 10, 25, 50, 100, "All"],
            messages: {
                itemsPerPage: "employee list",
                display: "{0}-{1} from {2} employee list",
                empty: "No entry Found",
                allPages: "Show All"
            }
        },
        dataBound: function () {
            var rows = this.items();
            $(rows).each(function () {
                var index = $(this).index() + 1;
                var rowLabel = $(this).find(".row-number");
                $(rowLabel).html(index);
            });
        }
    }).data("kendoGrid");
    
</script>


